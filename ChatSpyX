if SPY_LOADED == true then return end
pcall(function() getgenv().SPY_LOADED = true end)
-- // Initialise
--if (getgenv().ChatSpy) then return getgenv().ChatSpy; end;
repeat wait() until game:GetService("ContentProvider").RequestQueueSize == 0
repeat wait() until game:IsLoaded()

-- // Vars
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local DefaultChatSystemChatEvents = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents")
local SayMessageRequest = DefaultChatSystemChatEvents:WaitForChild("SayMessageRequest")
local OnMessageDoneFiltering = DefaultChatSystemChatEvents:WaitForChild("OnMessageDoneFiltering")
getgenv().ChatSpy = {
    Enabled = true,
    SpyOnSelf = false,
    Public = false,
    Count = 0,
    Chat = {
        Color  = Color3.fromRGB(0, 255, 255),
        Font = Enum.Font.SourceSansBold,
        TextSize = 18,
        Text = "",
    },
    IgnoreList = {
        {Message = ":part/1/1/1", ExactMatch = true},
        {Message = ":part/10/10/10", ExactMatch = true},
        {Message = "A?????????", ExactMatch = false},
        {Message = ":colorshifttop 10000 0 0", ExactMatch = true},
        {Message = ":colorshiftbottom 10000 0 0", ExactMatch = true},
        {Message = ":colorshifttop 0 10000 0", ExactMatch = true},
        {Message = ":colorshiftbottom 0 10000 0", ExactMatch = true},
        {Message = ":colorshifttop 0 0 10000", ExactMatch = true},
        {Message = ":colorshiftbottom 0 0 10000", ExactMatch = true},
    },
};

-- // Function
function ChatSpy.checkIgnored(message)
    for i = 1, #ChatSpy.IgnoreList do
        local v = ChatSpy.IgnoreList[i]
        if (v.ExactMatch and message == v.Message) or (not v.ExactMatch and string.match(v.Message, message)) then 
            return true
        end
    end
    return false
end

function ChatSpy.onChatted(targetPlayer, message)
    if (targetPlayer == LocalPlayer and string.lower(message) == "/spy") then
	ChatSpy.Count = ChatSpy.Count + 1
	if ChatSpy.Count < 2 then
	        ChatSpy.Enabled = not(ChatSpy.Enabled)
	        ChatSpy.Chat.Text = "{SPY} - "..(ChatSpy.Enabled and "Enabled." or "Disabled.")
		task.wait(0.55)
	        StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat)
	else
		ChatSpy.Count = 0
	end
    elseif (ChatSpy.Enabled and (ChatSpy.SpyOnSelf or targetPlayer ~= LocalPlayer)) then
        local message = message:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')

        local Hidden = true
        local Connection = OnMessageDoneFiltering.OnClientEvent:Connect(function(packet, channel)
            if (packet.SpeakerUserId == targetPlayer.UserId and packet.Message == message:sub(#message - #packet.Message + 1) and (channel == "All" or (channel == "Team" and not ChatSpy.Public and Players[packet.FromSpeaker].Team == LocalPlayer.Team))) then
                Hidden = false
            end
        end)

        wait(0.5)
        Connection:Disconnect()

        if (Hidden and ChatSpy.Enabled and not ChatSpy.checkIgnored(message)) then
            if (#message > 1200) then
                message = message:sub(1200) .. "..."
            end
			if message:sub(1,2) == "/w" then
				for _,plr in pairs(Players:GetPlayers()) do
					local msg, count = message:gsub(plr.Name,plr.DisplayName)
					if count ~= 0 then
						ChatSpy.Chat.Text = "{SPY} ["..targetPlayer.DisplayName.."]: "..msg
						break
					end
				end
			else
				ChatSpy.Chat.Text = "{SPY} ["..targetPlayer.DisplayName.."]: " .. message
			end
            StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat)
        end
    end
end

-- // Handling Chats
local AllPlayers = Players:GetPlayers()
for i = 1, #AllPlayers do
    local player = AllPlayers[i]
    player.Chatted:Connect(function(message)
        ChatSpy.onChatted(player, message)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        ChatSpy.onChatted(player, message)
    end)
end)

-- // Initialise Text
ChatSpy.Chat.Text = "{SPY} - "..(ChatSpy.Enabled and "Enabled." or "Disabled.")
StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat)

-- // Update Chat Frame
local chatFrame = LocalPlayer.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), chatFrame.ChatChannelParentFrame.Size.Y)
